Need to figure out how to handle forward references.
Perhaps Doc needs to be
Chunk Builder | Future (HeXState -> Builder)

can define Monoid for this.

then run the parser, and at the end feed the final HEXState
into the future.

problem:  We'd have to give up converting Docs to strings, etc.
Perhaps the easiest solution is just to add new parsers for
a group containing a string, a number, etc.

but then you couldn't do things like \double{\triple{5}}

another alternative would be to just fail parsing the argument
if it's a Future...

hexto
-----


my.hex:
------------
\title{This is my document!}

Here's my \emph{text}.
------------

my.hs:
------------
import Text.HeX

main = defaultMain parsers
------------


hexto html /dir/my.hex:
- looks for /dir/my.hex
- if found, looks for /dir/my.hs
- else error
- if found, runs it with: 'runghc $OPTS /dir/my.hs html',
  taking input from /dir/my.hex, output to --output file
  if specified or stdout
- else create it using default, then run as above



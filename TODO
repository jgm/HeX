_ rethink!
  document class Doc
  instances:  Math, Inline, Block

  so, each arg in a command command will be specifically designated
  by type.

_ rethink ensuremath

_ mathML:
  _ arrays
  _ superscript, subscript, limit
_ outer shell - preamble stuff, css, encoding, etc.
_ \index also in HTML!
_ mathML to SVG? www.grigoriev.ru/svgmath/
_ add accented character commands to standard parsers
_ jail for IO?
_ figure out how to do verbatims
_ figure out how to do environments (do we need them? why not just use
  {} for grouping?)
_ math in both formats (mathml?)
_ bibliography w/ citeproc
_ syntactic macros (why not? in many cases going to Haskell is overkill)
_ hexto?

hexto
-----


my.hex:
------------
\title{This is my document!}

Here's my \emph{text}.
------------

my.hs:
------------
import Text.HeX

main = defaultMain parsers
------------


hexto html /dir/my.hex:
- looks for /dir/my.hex
- if found, looks for /dir/my.hs
- else error
- if found, runs it with: 'runghc $OPTS /dir/my.hs html',
  taking input from /dir/my.hex, output to --output file
  if specified or stdout
- else create it using default, then run as above



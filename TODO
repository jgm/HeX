_ note: these next two items will require diff treatment in
  diff output formats, but they're not "commands"; perhaps we
  need a more generic way to register parsers (not just commands)
  for specific formats?  or use getFormat >>= guard . (== "html")
  _ support for comments
  _ support for quotes, dashes, ellipses
x system for warnings; e.g. warn if a label is redefined.
_ jail for IO?
_ figure out how to do verbatims
_ figure out how to do environments (do we need them? why not just use
  {} for grouping?)
_ headers, labels, refs
_ math in both formats (mathml?)
_ bibliography w/ citeproc
_ syntactic macros (why not? in many cases going to Haskell is overkill)


hexto
-----


my.hex:
------------
\title{This is my document!}

Here's my \emph{text}.
------------

my.hs:
------------
import Text.HeX

main = defaultMain parsers
------------


hexto html /dir/my.hex:
- looks for /dir/my.hex
- if found, looks for /dir/my.hs
- else error
- if found, runs it with: 'runghc $OPTS /dir/my.hs html',
  taking input from /dir/my.hex, output to --output file
  if specified or stdout
- else create it using default, then run as above


